nxf_work_dir <- "~/TEST_TMP/NBSNGS/"
if(file.exists(paste0(nxf_work_dir,"/assets/SampleSheet.collection")) == TRUE){
legacy <- fread(paste0(nxf_work_dir,"/assets/SampleSheet.collection"), na.strings = "")
}
sample.sheet.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "SampleSheet.csv$", recursive = TRUE)
#AIM: search for CopyComplete.txt (if CopyComplete exists the data is ready to be processed)
copy.complete.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "CopyComplete.txt", recursive = TRUE) %>% gsub("CopyComplete.txt", "SampleSheet.csv", .)
copy.complete.list <- grep("NBSNGS.PIPELINE", copy.complete.list, invert = TRUE, value = TRUE)
nxf_work_dir <- "~/TEST_TMP/NBSNGS/"
source(paste0(nxf_work_dir,"/bin/dependencies.R"))
sample.sheet.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "SampleSheet.csv$", recursive = TRUE)
#AIM: search for CopyComplete.txt (if CopyComplete exists the data is ready to be processed)
copy.complete.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "CopyComplete.txt", recursive = TRUE) %>% gsub("CopyComplete.txt", "SampleSheet.csv", .)
copy.complete.list <- grep("NBSNGS.PIPELINE", copy.complete.list, invert = TRUE, value = TRUE)
#AIM: remove SampleSheets in folders with no CopyComplete.txt
sample.sheet.processing.list <- sample.sheet.list[sample.sheet.list %in% copy.complete.list]
#Collecting and filtering SampleSheet.vsc
sample.sheet.collect <- list()
for(i in 1:length(sample.sheet.processing.list)){
sample.sheet.collect[[i]] <- fread(cmd=paste0("sed -n '/Sample_ID/,$p' ", nxf_work_dir,"/DATA/", sample.sheet.processing.list[i]), na.strings = "") %>%
select(Sample_ID,Sample_Name, Sample_Project, Description) %>% mutate(Flowcell.path = sample.sheet.processing.list[i]) %>%
mutate(Flowcell = str_extract(Flowcell.path, "[[:digit:]]{6}_[[:alpha:]]+[[:digit:]]+_[[:digit:]]+_[[:alnum:]]+")) %>% filter(!is.na(Flowcell)) %>%
unite(Sample_ID.Flowcell, c(Sample_ID, Flowcell), sep = "-", remove= FALSE)
}
sampleSheets <- do.call("rbind", sample.sheet.collect) %>% filter(!is.na(Sample_ID)) %>% distinct() %>% filter(Sample_Project %in% c("NBS-NGS", "nbs-ngs")) %>% filter(!is.na(Sample_Project)) %>%
select(-Flowcell.path)
if(exists("legacy") == FALSE){
sampleSheets_add <- sampleSheets
fwrite(sampleSheets, "SampleSheet.collection", sep = "\t")
}else{
sampleSheets_add  <- rbind(sampleSheets, legacy) %>% distinct(.)
fwrite(sampleSheets_add, "SampleSheet.collection", sep = "\t")
}
OPL <- data.frame(OPLs =  list.files(paste0(nxf_work_dir, "/variants/"), "*.GATK.OPL.vcf$", recursive = TRUE)) %>%
mutate(SampleId.OPL = str_sub(OPLs,stri_locate_last_fixed(OPLs, "/")[,1]+1, nchar(OPLs))) %>% mutate(SampleId = gsub(".GATK.OPL.vcf", "", SampleId.OPL)) %>% select(-OPLs)
OPL.list <- OPL %>% pull(SampleId) %>% paste(., collapse = "|")
#make filtrer
done.REPORTS <-  data.frame(REPORTS =  list.files(paste0(nxf_work_dir, "/results_REPORTS"), "*.report.html$", recursive = TRUE)) %>%
mutate(SampleId.REPORTS =  str_extract(REPORTS, OPL.list  ))
sampleSheets_add_OPL <- sampleSheets_add %>% select(Sample_ID.Flowcell, Flowcell, Description) %>% rename(SampleId =1, Flowcell = 2, Phenotype = 3) %>%  inner_join(., OPL, by = "SampleId") %>%
filter(!SampleId %in% done.REPORTS$SampleId.REPORTS) %>% replace_na(list(Phenotype = "NaN"))
fwrite(sampleSheets_add_OPL, "sampleSheets_OPL", sep = "\t")
f(file.exists(paste0(nxf_work_dir,"/assets/SampleSheet.collection")) == TRUE){
legacy <- fread(paste0(nxf_work_dir,"/assets/SampleSheet.collection"), na.strings = "")
}
sample.sheet.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "SampleSheet.csv$", recursive = TRUE)
#AIM: search for CopyComplete.txt (if CopyComplete exists the data is ready to be processed)
copy.complete.list <- list.files(paste0(nxf_work_dir, "/DATA/"), "CopyComplete.txt", recursive = TRUE) %>% gsub("CopyComplete.txt", "SampleSheet.csv", .)
copy.complete.list <- grep("NBSNGS.PIPELINE", copy.complete.list, invert = TRUE, value = TRUE)
#AIM: remove SampleSheets in folders with no CopyComplete.txt
sample.sheet.processing.list <- sample.sheet.list[sample.sheet.list %in% copy.complete.list]
#Collecting and filtering SampleSheet.vsc
sample.sheet.collect <- list()
for(i in 1:length(sample.sheet.processing.list)){
sample.sheet.collect[[i]] <- fread(cmd=paste0("sed -n '/Sample_ID/,$p' ", nxf_work_dir,"/DATA/", sample.sheet.processing.list[i]), na.strings = "") %>%
select(Sample_ID,Sample_Name, Sample_Project, Description) %>% mutate(Flowcell.path = sample.sheet.processing.list[i]) %>%
mutate(Flowcell = str_extract(Flowcell.path, "[[:digit:]]{6}_[[:alpha:]]+[[:digit:]]+_[[:digit:]]+_[[:alnum:]]+")) %>% filter(!is.na(Flowcell)) %>%
unite(Sample_ID.Flowcell, c(Sample_ID, Flowcell), sep = "-", remove= FALSE)
}
sampleSheets <- do.call("rbind", sample.sheet.collect) %>% filter(!is.na(Sample_ID)) %>% distinct() %>% filter(Sample_Project %in% c("NBS-NGS", "nbs-ngs")) %>% filter(!is.na(Sample_Project)) %>%
select(-Flowcell.path)
if(exists("legacy") == FALSE){
sampleSheets_add <- sampleSheets
fwrite(sampleSheets, "SampleSheet.collection", sep = "\t")
}else{
sampleSheets_add  <- bind_rows(sampleSheets, legacy) %>% distinct(.)
fwrite(sampleSheets_add, "SampleSheet.collection", sep = "\t")
}
OPL <- data.frame(OPLs =  list.files(paste0(nxf_work_dir, "/variants/"), "*.GATK.OPL.vcf$", recursive = TRUE)) %>%
mutate(SampleId.OPL = str_sub(OPLs,stri_locate_last_fixed(OPLs, "/")[,1]+1, nchar(OPLs))) %>% mutate(SampleId = gsub(".GATK.OPL.vcf", "", SampleId.OPL)) %>% select(-OPLs)
OPL.list <- OPL %>% pull(SampleId) %>% paste(., collapse = "|")
#make filtrer
done.REPORTS <-  data.frame(REPORTS =  list.files(paste0(nxf_work_dir, "/results_REPORTS"), "*.report.html$", recursive = TRUE)) %>%
mutate(SampleId.REPORTS =  str_extract(REPORTS, OPL.list  ))
sampleSheets_add_OPL <- sampleSheets_add %>% select(Sample_ID.Flowcell, Flowcell, Description) %>% rename(SampleId =1, Flowcell = 2, Phenotype = 3) %>%  inner_join(., OPL, by = "SampleId") %>%
filter(!SampleId %in% done.REPORTS$SampleId.REPORTS) %>% replace_na(list(Phenotype = "NaN"))
View(sampleSheets_add_OPL)
done.REPORTS <-  data.frame(REPORTS =  list.files(paste0(nxf_work_dir, "/results_REPORTS"), "*.report.html$", recursive = TRUE))
nxf_work_dir <- "~/TEST_TMP/NBSNGS/"
